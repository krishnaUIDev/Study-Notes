what casues excess reconcilliations? 

1. passing down unncecessary props   <Component { ...rest } />
2. Object literla defined in render <Component style={{margin: 0}} />
3. anonymous functins defined in render 
  <Component onChange={ (e) => this.handleChange(e)}

 how to reduce reconciliations?

1. Define constants and bind functions outside of render
   
    <Component onChange={ (e) => this.handleChange(e)}   otherthen this  <Compoonent onChange={this.handleChange}/>

2. <Component style={{margin: 0}} />   other then this const myStyle = {style}
3. <component {...rest} />  other then this use <component test={test}/>
3. shouldCOmponentupdate()

shouldComponentUpdate(nextProps,nextState){
return this.props !== nextProps
&& this.state != nextState
}




es6 features

1. let and const
2. spread operator
3. rest parameter
4. destructruing'
5. arrow functions
6. template literals
7. map
8. object.assign()
9. classes
10. static methods
11. promises
12. async/await




